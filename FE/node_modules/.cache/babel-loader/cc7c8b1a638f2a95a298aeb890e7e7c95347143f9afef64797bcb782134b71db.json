{"ast":null,"code":"var _jsxFileName = \"/Users/rarestapu/Downloads/proiectweb-main/FE/src/components/StudentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/main.css';\nimport '../css/request-page.css';\nimport { useAuth } from '../helpers/authContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentPage() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [dissertationTopic, setDissertationTopic] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [teacher, setTeacher] = useState(null);\n  const [hasErrorNotification, setHasErrorNotification] = useState(true);\n  let teacherId;\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    getFinalRequest().then(result => {\n      console.log('Data fetched successfully:', result);\n      if (result !== null && result.length > 0) {\n        const finalRequest = result[0];\n        // TODO de adaugat clasa si stilizat\n        const pElement = document.createElement('p');\n        pElement.innerHTML = 'Cererea de dissertație aprobată este ' + finalRequest.title + \" - \" + finalRequest.session_id;\n        if (document.getElementById('main-div')) {\n          document.getElementById('main-div').innerHTML = '';\n          document.getElementById('main-div').appendChild(pElement);\n        }\n        const contentDivs = document.getElementsByClassName('content-div');\n        Array.from(contentDivs).forEach(div => div.style.display = 'none');\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    fetchData().then(result => {\n      console.log('Data fetched successfully:', result);\n      const teacherList = document.getElementById('available-teacher-list');\n      const teachers = result;\n      if (teacherList) {\n        teacherList.innerHTML = \"\";\n        teachers.forEach(teacher => {\n          const liElement = document.createElement('li');\n          const spanName = document.createElement('span');\n          spanName.innerHTML = teacher.name;\n          spanName.classList.add('teacher-list-span');\n          const spanNumber = document.createElement('span');\n          spanNumber.innerHTML = teacher.student_number + ' available spots';\n          spanNumber.classList.add('teacher-list-span');\n          liElement.appendChild(spanName);\n          liElement.appendChild(spanNumber);\n          const sendRequestBtn = document.createElement(\"button\");\n          sendRequestBtn.classList.add('button-30');\n          sendRequestBtn.classList.add('open-popup-btn');\n          sendRequestBtn.dataset.teacher = teacher.id;\n          sendRequestBtn.innerHTML = \"Send Request\";\n          liElement.appendChild(sendRequestBtn);\n          if (teacher.student_number === 0 || teacher.student_number === null) {\n            sendRequestBtn.style.visibility = 'hidden';\n          }\n          teacherList.appendChild(liElement);\n        });\n        const openPopupBtns = document.querySelectorAll('.open-popup-btn');\n        console.log(openPopupBtns);\n        openPopupBtns.forEach(btn => {\n          btn.addEventListener('click', async () => {\n            teacherId = btn.dataset.teacher;\n            // Verifică dacă studentul a trimis deja cerere la profesor\n            const existingRequest = await checkExistingRequest(user.id, teacherId);\n            console.log(\"student id\", user.id);\n            console.log(\"teacher id\", teacherId);\n            console.log(\"existingRequest\", existingRequest);\n            if (existingRequest) {\n              // Există deja o cerere\n              toast.error('You already sent a request to this professor.');\n            } else {\n              setTeacher(teacherId);\n              openPopup();\n              getTeacherSessions().then(result => {\n                console.log(result);\n                const dropdown = document.getElementById('session-list');\n                dropdown.innerHTML = '';\n                const option = document.createElement('option');\n                option.text = 'Session';\n                dropdown.add(option);\n\n                // Add new options\n                result.forEach(item => {\n                  const option = document.createElement('option');\n                  option.value = item.id;\n                  option.text = item.start_date + ' - ' + item.end_date;\n                  dropdown.add(option);\n                });\n              }).catch(error => {\n                console.error('Error fetching data:', error);\n              });\n            }\n          });\n        });\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    getAcceptedRequests().then(result => {\n      console.log(result);\n      console.log('Data fetched successfully:', result);\n      const acceptedList = document.getElementById('first-phase-accepted');\n      if (acceptedList) {\n        acceptedList.innerHTML = \"\";\n        result.forEach(request => {\n          console.log(request.id);\n          const liElement = document.createElement('li');\n          const spanTitle = document.createElement('span');\n          spanTitle.innerHTML = request.title;\n          spanTitle.classList.add('teacher-list-span');\n          const spanSession = document.createElement('span');\n          spanSession.innerHTML = request.session_id;\n          spanSession.classList.add('teacher-list-span');\n          liElement.appendChild(spanTitle);\n          liElement.appendChild(spanSession);\n          const inputFile = document.createElement(\"input\");\n          inputFile.type = 'file';\n          liElement.appendChild(inputFile);\n          const uploadFileBtn = document.createElement(\"button\");\n          uploadFileBtn.innerHTML = \"Upload file\";\n          uploadFileBtn.classList.add('upload-file');\n          uploadFileBtn.classList.add('button-30');\n          liElement.appendChild(uploadFileBtn);\n          acceptedList.appendChild(liElement);\n          uploadFileBtn.addEventListener('click', () => {\n            if (inputFile.files.length > 0) {\n              // Access the selected file\n              const selectedFile = inputFile.files[0];\n\n              // Log or use the selected file\n              console.log('Selected File:', selectedFile);\n              handleUpload(selectedFile);\n              updateRequest(request.id);\n              liElement.style.display = 'none';\n            } else {\n              console.warn('No file selected.');\n              toast.warning('Nu ati ales niciun fisier');\n            }\n          });\n        });\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    const confirmSendBtn = document.getElementById('send-request-btn');\n    const sendRequestHandler = () => {\n      //Se verifica pentru validatea campurilor cum este hasErrorNotification(declarat la inceput), in functie de asta trece mai departe sau nu\n      console.log(\"call sendRequest\");\n      console.log(\"hasErrorNotification1:\", hasErrorNotification);\n      if (hasErrorNotification === false) {\n        sendRequest();\n        //Dezactivează ascultătorul de evenimente după ce este apelată funcția sendRequest.\n        confirmSendBtn.removeEventListener('click', sendRequestHandler);\n      }\n    };\n    confirmSendBtn.addEventListener('click', sendRequestHandler);\n    return () => {\n      // Detașează ascultătorul de evenimente pentru a evita memory leak.\n      confirmSendBtn.removeEventListener('click', sendRequestHandler);\n    };\n  }, [dissertationTopic, sessionId, hasErrorNotification]);\n  function openPopup() {\n    console.log(\"openpopup\");\n    resetForm(); //pentru a se reseta valorile formularului de sendDissertationRequest\n    document.getElementById('overlay').style.display = 'flex';\n    document.querySelector('#close-btn').addEventListener('click', closePopup);\n  }\n\n  //daca campurile din sendDissertationRequest sunt completate corect se efectueaza sendRequest\n  function sendRequest() {\n    console.log(\"sendRequest\");\n    document.getElementById('overlay-success').style.display = 'flex';\n    document.querySelector('#close-success-popup-btn').addEventListener('click', closePopup);\n    console.log(\"hasErrorNotification2:\", hasErrorNotification);\n  }\n  function closePopup() {\n    console.log(\"closepopup\");\n    document.getElementById('overlay').style.display = 'none';\n    document.getElementById('overlay-success').style.display = 'none';\n  }\n\n  ////pentru a se reseta valorile formularului de sendDissertationRequest\n  function resetForm() {\n    setDissertationTopic('');\n    setSessionId(null);\n  }\n\n  // Funcție pentru a verifica existența unei cereri în funcție de student_id și teacher_id\n  async function checkExistingRequest(studentId, teacherId) {\n    try {\n      console.log(\"Checking existing request:\", studentId, teacherId);\n      const response = await fetch(`http://localhost:5002/api/checkExistingRequest?studentId=${studentId}&teacherId=${teacherId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(\"result\", result);\n      console.log(result.exists);\n      return result.exists;\n    } catch (error) {\n      console.error('Error checking existing request:', error);\n      return false;\n    }\n  }\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/filterUsers?account_type=profesor', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const getTeacherSessions = async () => {\n    try {\n      console.log(teacherId);\n      const response = await fetch('http://localhost:5002/api/filterSessions?teacher_id=' + teacherId, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const sendDissertationRequest = async () => {\n    try {\n      console.log(\"senddissertationrequest\");\n      //Pentru validate campuri\n      let canProceed = true;\n      if (!dissertationTopic.trim()) {\n        toast.error('Completați tema înainte de a trimite cererea.');\n        console.log(\"fara tema\");\n        canProceed = false;\n      }\n      if (!sessionId) {\n        toast.error('Selectați sesiunea înainte de a trimite cererea.');\n        console.log(\"fara sesiune\");\n        canProceed = false;\n      }\n      //in functie de rezultat setam hasErrorNotification\n      if (!canProceed) {\n        setHasErrorNotification(true);\n        return;\n      } else {\n        setHasErrorNotification(false);\n      }\n      const postData = {\n        teacher_id: teacher,\n        student_id: user.id,\n        title: dissertationTopic,\n        session_id: sessionId,\n        student_name: user.name,\n        status: 'in asteptare'\n      };\n      const response = await fetch('http://localhost:5002/api/newRequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(result);\n      toast.success('Cerere trimisa');\n      return result;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      toast.error('A apărut o eroare la trimiterea cererii.');\n      setHasErrorNotification(true);\n    }\n  };\n  const getAcceptedRequests = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/filterRequests?studentId=' + user.id + '&status=acceptata', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const getFinalRequest = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/filterRequests?studentId=' + user.id + '&status=finalizata', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleUpload = async selectedFile => {\n    if (selectedFile) {\n      try {\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n        const response = await fetch('http://localhost:5002/api/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          console.log('File uploaded successfully!');\n          toast.success('Fisier incarcat');\n        } else {\n          console.error('Failed to upload file.');\n        }\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    } else {\n      console.warn('No file selected for upload.');\n    }\n  };\n  const updateRequest = async requestId => {\n    try {\n      const postData = {\n        status: \"fisier incarcat\"\n      };\n      console.log(postData);\n      const response = await fetch('http://localhost:5002/api/dissertation_requests/' + requestId, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User not authenticated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"lista-prof\",\n        children: \"Professor list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"available-teacher-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        id: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close-btn\",\n            id: \"close-btn\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"cerere-dis\",\n            children: \"Thesis request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tema\",\n            children: \"Fill in the theme of your thesis.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Tema\",\n            id: \"dissertation-topic\",\n            required: true,\n            value: dissertationTopic,\n            onChange: e => setDissertationTopic(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sesiune-dor\",\n              children: \"Select the desired session: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"session-list\",\n              required: true,\n              value: sessionId || '',\n              onChange: e => {\n                setSessionId(e.target.value);\n                console.log(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-30\",\n            id: \"send-request-btn\",\n            onClick: sendDissertationRequest,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        id: \"overlay-success\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close-btn\",\n            id: \"close-success-popup-btn\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Request was sent successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for teacher response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cereri-acc\",\n        children: \"Accepted Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"first-phase-accepted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 7\n  }, this);\n}\n_s(StudentPage, \"8CUn5eiO3Dbeh6YH3zeXmun8xxo=\", false, function () {\n  return [useAuth];\n});\n_c = StudentPage;\nexport default StudentPage;\nvar _c;\n$RefreshReg$(_c, \"StudentPage\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","ToastContainer","toast","jsxDEV","_jsxDEV","StudentPage","_s","user","dissertationTopic","setDissertationTopic","sessionId","setSessionId","teacher","setTeacher","hasErrorNotification","setHasErrorNotification","teacherId","getFinalRequest","then","result","console","log","length","finalRequest","pElement","document","createElement","innerHTML","title","session_id","getElementById","appendChild","contentDivs","getElementsByClassName","Array","from","forEach","div","style","display","catch","error","fetchData","teacherList","teachers","liElement","spanName","name","classList","add","spanNumber","student_number","sendRequestBtn","dataset","id","visibility","openPopupBtns","querySelectorAll","btn","addEventListener","existingRequest","checkExistingRequest","openPopup","getTeacherSessions","dropdown","option","text","item","value","start_date","end_date","getAcceptedRequests","acceptedList","request","spanTitle","spanSession","inputFile","type","uploadFileBtn","files","selectedFile","handleUpload","updateRequest","warn","warning","confirmSendBtn","sendRequestHandler","sendRequest","removeEventListener","resetForm","querySelector","closePopup","studentId","response","fetch","method","headers","ok","Error","status","json","exists","sendDissertationRequest","canProceed","trim","postData","teacher_id","student_id","student_name","body","JSON","stringify","success","formData","FormData","append","requestId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","required","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/rarestapu/Downloads/proiectweb-main/FE/src/components/StudentPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../css/main.css';\nimport '../css/request-page.css';\nimport { useAuth } from '../helpers/authContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction StudentPage() {\n  const { user } = useAuth();\n  const [dissertationTopic, setDissertationTopic] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [teacher, setTeacher] = useState(null);\n  const [hasErrorNotification, setHasErrorNotification] = useState(true);\n\n  let teacherId;\n\n    useEffect(() => {\n      if (!user) {\n        return;\n      }\n\n      getFinalRequest().then((result) => {\n        console.log('Data fetched successfully:', result);\n        if (result !== null && result.length > 0) {\n          const finalRequest = result[0];\n          // TODO de adaugat clasa si stilizat\n          const pElement = document.createElement('p');\n          pElement.innerHTML = 'Cererea de dissertație aprobată este ' + finalRequest.title + \" - \" + finalRequest.session_id;\n          if (document.getElementById('main-div')) {\n          document.getElementById('main-div').innerHTML = '';\n          document.getElementById('main-div').appendChild(pElement);}\n          const contentDivs = document.getElementsByClassName('content-div');\n          Array.from(contentDivs).forEach(div => div.style.display = 'none');\n        }\n        \n      }).catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n\n      fetchData().then((result) => {\n        console.log('Data fetched successfully:', result);\n        const teacherList = document.getElementById('available-teacher-list');\n          const teachers = result;\n      \n          if(teacherList){\n          teacherList.innerHTML = \"\";\n          teachers.forEach((teacher) => {\n            const liElement = document.createElement('li');\n\n            const spanName = document.createElement('span');\n            spanName.innerHTML = teacher.name;\n            spanName.classList.add('teacher-list-span');\n            \n            const spanNumber = document.createElement('span');\n            spanNumber.innerHTML = teacher.student_number + ' available spots';\n            spanNumber.classList.add('teacher-list-span');\n\n            liElement.appendChild(spanName);\n            liElement.appendChild(spanNumber);\n\n            const sendRequestBtn = document.createElement(\"button\");\n            sendRequestBtn.classList.add('button-30');\n            sendRequestBtn.classList.add('open-popup-btn');\n            sendRequestBtn.dataset.teacher = teacher.id;\n            sendRequestBtn.innerHTML = \"Send Request\";\n            liElement.appendChild(sendRequestBtn);\n            if (teacher.student_number === 0 || teacher.student_number === null) {\n              sendRequestBtn.style.visibility = 'hidden';\n            }\n\n            teacherList.appendChild(liElement);\n          });\n\n          const openPopupBtns = document.querySelectorAll('.open-popup-btn');\n          console.log(openPopupBtns);\n          openPopupBtns.forEach(btn => {\n            btn.addEventListener('click', async () => {\n              \n              teacherId = btn.dataset.teacher;\n              // Verifică dacă studentul a trimis deja cerere la profesor\n              const existingRequest = await checkExistingRequest(user.id, teacherId);  \n              console.log(\"student id\", user.id);   \n              console.log(\"teacher id\", teacherId);\n              console.log(\"existingRequest\", existingRequest);    \n              if (existingRequest) {\n                // Există deja o cerere\n                toast.error('You already sent a request to this professor.');\n              } else {\n                setTeacher(teacherId);\n                openPopup();\n\n              getTeacherSessions().then((result) => {\n                console.log(result)\n                const dropdown = document.getElementById('session-list');\n                dropdown.innerHTML = '';\n                const option = document.createElement('option');\n                option.text = 'Session';\n                dropdown.add(option);\n\n                // Add new options\n                result.forEach(item => {\n                    const option = document.createElement('option');\n                    option.value = item.id;\n                    option.text = item.start_date + ' - ' + item.end_date;\n                    dropdown.add(option);\n                });\n\n              }).catch((error) => {\n                console.error('Error fetching data:', error);\n              });\n            }\n            });\n          });}\n      }).catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n\n      getAcceptedRequests().then((result) => {\n        console.log(result);\n        console.log('Data fetched successfully:', result);\n        const acceptedList = document.getElementById('first-phase-accepted');\n          if(acceptedList){\n          acceptedList.innerHTML = \"\";\n          result.forEach((request) => {\n            console.log(request.id);\n            const liElement = document.createElement('li');\n            \n            const spanTitle = document.createElement('span');\n            spanTitle.innerHTML = request.title;\n            spanTitle.classList.add('teacher-list-span');\n\n            const spanSession = document.createElement('span');\n            spanSession.innerHTML = request.session_id;\n            spanSession.classList.add('teacher-list-span');\n            \n            liElement.appendChild(spanTitle);\n            liElement.appendChild(spanSession);\n\n            const inputFile = document.createElement(\"input\");\n            inputFile.type = 'file';\n            liElement.appendChild(inputFile);\n\n            const uploadFileBtn = document.createElement(\"button\");\n            uploadFileBtn.innerHTML = \"Upload file\";\n            uploadFileBtn.classList.add('upload-file');\n            uploadFileBtn.classList.add('button-30');\n            liElement.appendChild(uploadFileBtn);\n      \n            acceptedList.appendChild(liElement);\n\n            uploadFileBtn.addEventListener('click', () => {\n              if (inputFile.files.length > 0) {\n                // Access the selected file\n                const selectedFile = inputFile.files[0];\n        \n                // Log or use the selected file\n                console.log('Selected File:', selectedFile);\n                handleUpload(selectedFile);\n                updateRequest(request.id);\n                liElement.style.display = 'none';\n              } else {\n                console.warn('No file selected.');\n                toast.warning('Nu ati ales niciun fisier');\n              }\n            });\n          });}\n      }).catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n\n      const confirmSendBtn = document.getElementById('send-request-btn');\n      const sendRequestHandler = () => {\n        //Se verifica pentru validatea campurilor cum este hasErrorNotification(declarat la inceput), in functie de asta trece mai departe sau nu\n        console.log(\"call sendRequest\");\n        console.log(\"hasErrorNotification1:\", hasErrorNotification);\n        if(hasErrorNotification === false){\n        sendRequest();\n        //Dezactivează ascultătorul de evenimente după ce este apelată funcția sendRequest.\n        confirmSendBtn.removeEventListener('click', sendRequestHandler);\n      }\n\n      };\n      confirmSendBtn.addEventListener('click', sendRequestHandler);\n      return () => {\n        // Detașează ascultătorul de evenimente pentru a evita memory leak.\n        confirmSendBtn.removeEventListener('click', sendRequestHandler);\n      };\n\n    }, [dissertationTopic, sessionId, hasErrorNotification]);\n\n      function openPopup() {\n        console.log(\"openpopup\");\n        resetForm(); //pentru a se reseta valorile formularului de sendDissertationRequest\n        document.getElementById('overlay').style.display = 'flex';\n        document.querySelector('#close-btn').addEventListener('click', closePopup);\n      }\n\n      //daca campurile din sendDissertationRequest sunt completate corect se efectueaza sendRequest\n      function sendRequest() {\n        console.log(\"sendRequest\");\n        document.getElementById('overlay-success').style.display = 'flex';\n        document.querySelector('#close-success-popup-btn').addEventListener('click', closePopup);\n        console.log(\"hasErrorNotification2:\", hasErrorNotification);\n      }\n  \n      function closePopup() {\n        console.log(\"closepopup\");\n        document.getElementById('overlay').style.display = 'none';\n        document.getElementById('overlay-success').style.display = 'none';\n      }\n\n      ////pentru a se reseta valorile formularului de sendDissertationRequest\n      function resetForm() {\n        setDissertationTopic('');\n        setSessionId(null);\n      }\n\n      // Funcție pentru a verifica existența unei cereri în funcție de student_id și teacher_id\n      async function checkExistingRequest(studentId, teacherId) {\n        try {\n          console.log(\"Checking existing request:\", studentId, teacherId);\n          const response = await fetch(`http://localhost:5002/api/checkExistingRequest?studentId=${studentId}&teacherId=${teacherId}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n\n          const result = await response.json();\n          console.log(\"result\", result);\n          console.log(result.exists);\n          return result.exists;\n        } catch (error) {\n          console.error('Error checking existing request:', error);\n          return false;\n        }\n      }\n\n      const fetchData = async () => {\n        try {\n          const response = await fetch('http://localhost:5002/api/filterUsers?account_type=profesor', {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json', \n              } \n          });\n    \n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n    \n          const result = await response.json();\n          return result;\n          \n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } \n      };\n\n      const getTeacherSessions = async () => {\n        try {\n          console.log(teacherId);\n          const response = await fetch('http://localhost:5002/api/filterSessions?teacher_id=' + teacherId, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json', \n              } \n          });\n    \n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n    \n          const result = await response.json();\n          return result;\n          \n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } \n      };\n\n      const sendDissertationRequest = async () => {\n        try {\n          console.log(\"senddissertationrequest\");\n          //Pentru validate campuri\n              let canProceed = true;\n              if (!dissertationTopic.trim()) {\n                toast.error('Completați tema înainte de a trimite cererea.');\n                console.log(\"fara tema\");\n                canProceed = false; \n              }          \n              if (!sessionId) {\n                toast.error('Selectați sesiunea înainte de a trimite cererea.');\n                console.log(\"fara sesiune\");\n                canProceed = false; \n              }\n              //in functie de rezultat setam hasErrorNotification\n              if (!canProceed) {\n                setHasErrorNotification(true);\n                return;\n              }\n              else\n              {\n                setHasErrorNotification(false);\n              }\n\n              const postData = {\n                teacher_id: teacher,\n                student_id: user.id,\n                title: dissertationTopic,\n                session_id: sessionId,\n                student_name: user.name,\n                status: 'in asteptare'\n              };\n    \n              const response = await fetch('http://localhost:5002/api/newRequest', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json', \n                },\n                body: JSON.stringify(postData), \n              });\n            \n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n    \n          const result = await response.json();\n          console.log(result);\n          toast.success('Cerere trimisa');\n          return result;\n        \n        } catch (error) {\n          console.error('Error fetching data:', error);\n          toast.error('A apărut o eroare la trimiterea cererii.');\n          setHasErrorNotification(true);\n        } \n      };\n\n      const getAcceptedRequests = async () => {\n        try {\n          const response = await fetch('http://localhost:5002/api/filterRequests?studentId=' + user.id + '&status=acceptata', {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json', \n              } \n          });\n    \n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n    \n          const result = await response.json();\n          return result;\n          \n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } \n      };\n\n      const getFinalRequest = async () => {\n        try {\n          const response = await fetch('http://localhost:5002/api/filterRequests?studentId=' + user.id + '&status=finalizata', {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json', \n              } \n          });\n    \n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n    \n          const result = await response.json();\n          console.log(result);\n          return result;\n          \n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } \n      };\n\n      const handleUpload = async (selectedFile) => {\n        if (selectedFile) {\n          try {\n            const formData = new FormData();\n            formData.append('file', selectedFile);\n    \n            const response = await fetch('http://localhost:5002/api/upload', {\n              method: 'POST',\n              body: formData,\n            });\n    \n            if (response.ok) {\n              console.log('File uploaded successfully!');\n              toast.success('Fisier incarcat');\n            } else {\n              console.error('Failed to upload file.');\n            }\n          } catch (error) {\n            console.error('Error uploading file:', error);\n          }\n        } else {\n          console.warn('No file selected for upload.');\n        }\n      };\n\n      const updateRequest = async (requestId) => {\n        try {\n          const postData = {\n            status : \"fisier incarcat\"\n          };\n          console.log(postData);\n          const response = await fetch('http://localhost:5002/api/dissertation_requests/' + requestId, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json', \n              },\n              body: JSON.stringify(postData) \n          });\n    \n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n    \n          const result = await response.json();\n          console.log(result);\n          return result;\n          \n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } \n      };    \n\n      if (!user) {\n        return <div>User not authenticated</div>;\n      }\n\n    return (\n      <div id='main-div'>\n        <div className='content-div'>\n          <h1 className='lista-prof'>Professor list</h1>\n          <ul id='available-teacher-list'>\n\n          </ul>\n\n          <div className=\"overlay\" id=\"overlay\">\n            <div className=\"popup\">\n              <span className=\"close-btn\" id='close-btn'>X</span>\n              <h2 className='cerere-dis'>Thesis request</h2>\n              <p className='tema'>Fill in the theme of your thesis.</p>\n              <input \n              type='text' \n              placeholder='Tema' \n              id='dissertation-topic' \n              required\n              value={dissertationTopic}\n              onChange={(e) => setDissertationTopic(e.target.value)}>  \n              </input>\n\n            <div>\n              <div className='sesiune-dor'>Select the desired session: </div>\n              <select id='session-list' required value={sessionId || ''} onChange={(e) => {setSessionId(e.target.value);console.log(e.target.value)}}>\n              </select>\n            </div>\n\n              <button className='button-30' id='send-request-btn' onClick={sendDissertationRequest}>Send</button>\n            </div>\n          </div>\n\n          <div className=\"overlay\" id=\"overlay-success\">\n            <div className=\"popup\">\n              <span className=\"close-btn\" id='close-success-popup-btn'>X</span>\n              <h2>Request was sent successfully!</h2>\n              <p>Waiting for teacher response</p>\n            </div>\n          </div>\n        </div>\n\n        <div className='content-div'>\n          <h1 className='cereri-acc'>Accepted Requests</h1>\n          <ul id='first-phase-accepted'>\n\n          </ul>\n        </div>\n        \n        <ToastContainer/>\n      </div>\n    );\n  }\n  \n  export default StudentPage;\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAO,yBAAyB;AAChC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtE,IAAIiB,SAAS;EAEXlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,IAAI,EAAE;MACT;IACF;IAEAU,eAAe,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MACjCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;MACjD,IAAIA,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;QACxC,MAAMC,YAAY,GAAGJ,MAAM,CAAC,CAAC,CAAC;QAC9B;QACA,MAAMK,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QAC5CF,QAAQ,CAACG,SAAS,GAAG,uCAAuC,GAAGJ,YAAY,CAACK,KAAK,GAAG,KAAK,GAAGL,YAAY,CAACM,UAAU;QACnH,IAAIJ,QAAQ,CAACK,cAAc,CAAC,UAAU,CAAC,EAAE;UACzCL,QAAQ,CAACK,cAAc,CAAC,UAAU,CAAC,CAACH,SAAS,GAAG,EAAE;UAClDF,QAAQ,CAACK,cAAc,CAAC,UAAU,CAAC,CAACC,WAAW,CAACP,QAAQ,CAAC;QAAC;QAC1D,MAAMQ,WAAW,GAAGP,QAAQ,CAACQ,sBAAsB,CAAC,aAAa,CAAC;QAClEC,KAAK,CAACC,IAAI,CAACH,WAAW,CAAC,CAACI,OAAO,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC;MACpE;IAEF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAClBrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEFC,SAAS,CAAC,CAAC,CAACxB,IAAI,CAAEC,MAAM,IAAK;MAC3BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;MACjD,MAAMwB,WAAW,GAAGlB,QAAQ,CAACK,cAAc,CAAC,wBAAwB,CAAC;MACnE,MAAMc,QAAQ,GAAGzB,MAAM;MAEvB,IAAGwB,WAAW,EAAC;QACfA,WAAW,CAAChB,SAAS,GAAG,EAAE;QAC1BiB,QAAQ,CAACR,OAAO,CAAExB,OAAO,IAAK;UAC5B,MAAMiC,SAAS,GAAGpB,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;UAE9C,MAAMoB,QAAQ,GAAGrB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UAC/CoB,QAAQ,CAACnB,SAAS,GAAGf,OAAO,CAACmC,IAAI;UACjCD,QAAQ,CAACE,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAE3C,MAAMC,UAAU,GAAGzB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UACjDwB,UAAU,CAACvB,SAAS,GAAGf,OAAO,CAACuC,cAAc,GAAG,kBAAkB;UAClED,UAAU,CAACF,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAE7CJ,SAAS,CAACd,WAAW,CAACe,QAAQ,CAAC;UAC/BD,SAAS,CAACd,WAAW,CAACmB,UAAU,CAAC;UAEjC,MAAME,cAAc,GAAG3B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;UACvD0B,cAAc,CAACJ,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;UACzCG,cAAc,CAACJ,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAC9CG,cAAc,CAACC,OAAO,CAACzC,OAAO,GAAGA,OAAO,CAAC0C,EAAE;UAC3CF,cAAc,CAACzB,SAAS,GAAG,cAAc;UACzCkB,SAAS,CAACd,WAAW,CAACqB,cAAc,CAAC;UACrC,IAAIxC,OAAO,CAACuC,cAAc,KAAK,CAAC,IAAIvC,OAAO,CAACuC,cAAc,KAAK,IAAI,EAAE;YACnEC,cAAc,CAACd,KAAK,CAACiB,UAAU,GAAG,QAAQ;UAC5C;UAEAZ,WAAW,CAACZ,WAAW,CAACc,SAAS,CAAC;QACpC,CAAC,CAAC;QAEF,MAAMW,aAAa,GAAG/B,QAAQ,CAACgC,gBAAgB,CAAC,iBAAiB,CAAC;QAClErC,OAAO,CAACC,GAAG,CAACmC,aAAa,CAAC;QAC1BA,aAAa,CAACpB,OAAO,CAACsB,GAAG,IAAI;UAC3BA,GAAG,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAY;YAExC3C,SAAS,GAAG0C,GAAG,CAACL,OAAO,CAACzC,OAAO;YAC/B;YACA,MAAMgD,eAAe,GAAG,MAAMC,oBAAoB,CAACtD,IAAI,CAAC+C,EAAE,EAAEtC,SAAS,CAAC;YACtEI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,IAAI,CAAC+C,EAAE,CAAC;YAClClC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,SAAS,CAAC;YACpCI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEuC,eAAe,CAAC;YAC/C,IAAIA,eAAe,EAAE;cACnB;cACA1D,KAAK,CAACuC,KAAK,CAAC,+CAA+C,CAAC;YAC9D,CAAC,MAAM;cACL5B,UAAU,CAACG,SAAS,CAAC;cACrB8C,SAAS,CAAC,CAAC;cAEbC,kBAAkB,CAAC,CAAC,CAAC7C,IAAI,CAAEC,MAAM,IAAK;gBACpCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;gBACnB,MAAM6C,QAAQ,GAAGvC,QAAQ,CAACK,cAAc,CAAC,cAAc,CAAC;gBACxDkC,QAAQ,CAACrC,SAAS,GAAG,EAAE;gBACvB,MAAMsC,MAAM,GAAGxC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;gBAC/CuC,MAAM,CAACC,IAAI,GAAG,SAAS;gBACvBF,QAAQ,CAACf,GAAG,CAACgB,MAAM,CAAC;;gBAEpB;gBACA9C,MAAM,CAACiB,OAAO,CAAC+B,IAAI,IAAI;kBACnB,MAAMF,MAAM,GAAGxC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;kBAC/CuC,MAAM,CAACG,KAAK,GAAGD,IAAI,CAACb,EAAE;kBACtBW,MAAM,CAACC,IAAI,GAAGC,IAAI,CAACE,UAAU,GAAG,KAAK,GAAGF,IAAI,CAACG,QAAQ;kBACrDN,QAAQ,CAACf,GAAG,CAACgB,MAAM,CAAC;gBACxB,CAAC,CAAC;cAEJ,CAAC,CAAC,CAACzB,KAAK,CAAEC,KAAK,IAAK;gBAClBrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;cAC9C,CAAC,CAAC;YACJ;UACA,CAAC,CAAC;QACJ,CAAC,CAAC;MAAC;IACP,CAAC,CAAC,CAACD,KAAK,CAAEC,KAAK,IAAK;MAClBrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF8B,mBAAmB,CAAC,CAAC,CAACrD,IAAI,CAAEC,MAAM,IAAK;MACrCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;MACjD,MAAMqD,YAAY,GAAG/C,QAAQ,CAACK,cAAc,CAAC,sBAAsB,CAAC;MAClE,IAAG0C,YAAY,EAAC;QAChBA,YAAY,CAAC7C,SAAS,GAAG,EAAE;QAC3BR,MAAM,CAACiB,OAAO,CAAEqC,OAAO,IAAK;UAC1BrD,OAAO,CAACC,GAAG,CAACoD,OAAO,CAACnB,EAAE,CAAC;UACvB,MAAMT,SAAS,GAAGpB,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;UAE9C,MAAMgD,SAAS,GAAGjD,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UAChDgD,SAAS,CAAC/C,SAAS,GAAG8C,OAAO,CAAC7C,KAAK;UACnC8C,SAAS,CAAC1B,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAE5C,MAAM0B,WAAW,GAAGlD,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UAClDiD,WAAW,CAAChD,SAAS,GAAG8C,OAAO,CAAC5C,UAAU;UAC1C8C,WAAW,CAAC3B,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAE9CJ,SAAS,CAACd,WAAW,CAAC2C,SAAS,CAAC;UAChC7B,SAAS,CAACd,WAAW,CAAC4C,WAAW,CAAC;UAElC,MAAMC,SAAS,GAAGnD,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;UACjDkD,SAAS,CAACC,IAAI,GAAG,MAAM;UACvBhC,SAAS,CAACd,WAAW,CAAC6C,SAAS,CAAC;UAEhC,MAAME,aAAa,GAAGrD,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;UACtDoD,aAAa,CAACnD,SAAS,GAAG,aAAa;UACvCmD,aAAa,CAAC9B,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;UAC1C6B,aAAa,CAAC9B,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;UACxCJ,SAAS,CAACd,WAAW,CAAC+C,aAAa,CAAC;UAEpCN,YAAY,CAACzC,WAAW,CAACc,SAAS,CAAC;UAEnCiC,aAAa,CAACnB,gBAAgB,CAAC,OAAO,EAAE,MAAM;YAC5C,IAAIiB,SAAS,CAACG,KAAK,CAACzD,MAAM,GAAG,CAAC,EAAE;cAC9B;cACA,MAAM0D,YAAY,GAAGJ,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC;;cAEvC;cACA3D,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE2D,YAAY,CAAC;cAC3CC,YAAY,CAACD,YAAY,CAAC;cAC1BE,aAAa,CAACT,OAAO,CAACnB,EAAE,CAAC;cACzBT,SAAS,CAACP,KAAK,CAACC,OAAO,GAAG,MAAM;YAClC,CAAC,MAAM;cACLnB,OAAO,CAAC+D,IAAI,CAAC,mBAAmB,CAAC;cACjCjF,KAAK,CAACkF,OAAO,CAAC,2BAA2B,CAAC;YAC5C;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MAAC;IACP,CAAC,CAAC,CAAC5C,KAAK,CAAEC,KAAK,IAAK;MAClBrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAM4C,cAAc,GAAG5D,QAAQ,CAACK,cAAc,CAAC,kBAAkB,CAAC;IAClE,MAAMwD,kBAAkB,GAAGA,CAAA,KAAM;MAC/B;MACAlE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,oBAAoB,CAAC;MAC3D,IAAGA,oBAAoB,KAAK,KAAK,EAAC;QAClCyE,WAAW,CAAC,CAAC;QACb;QACAF,cAAc,CAACG,mBAAmB,CAAC,OAAO,EAAEF,kBAAkB,CAAC;MACjE;IAEA,CAAC;IACDD,cAAc,CAAC1B,gBAAgB,CAAC,OAAO,EAAE2B,kBAAkB,CAAC;IAC5D,OAAO,MAAM;MACX;MACAD,cAAc,CAACG,mBAAmB,CAAC,OAAO,EAAEF,kBAAkB,CAAC;IACjE,CAAC;EAEH,CAAC,EAAE,CAAC9E,iBAAiB,EAAEE,SAAS,EAAEI,oBAAoB,CAAC,CAAC;EAEtD,SAASgD,SAASA,CAAA,EAAG;IACnB1C,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBoE,SAAS,CAAC,CAAC,CAAC,CAAC;IACbhE,QAAQ,CAACK,cAAc,CAAC,SAAS,CAAC,CAACQ,KAAK,CAACC,OAAO,GAAG,MAAM;IACzDd,QAAQ,CAACiE,aAAa,CAAC,YAAY,CAAC,CAAC/B,gBAAgB,CAAC,OAAO,EAAEgC,UAAU,CAAC;EAC5E;;EAEA;EACA,SAASJ,WAAWA,CAAA,EAAG;IACrBnE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BI,QAAQ,CAACK,cAAc,CAAC,iBAAiB,CAAC,CAACQ,KAAK,CAACC,OAAO,GAAG,MAAM;IACjEd,QAAQ,CAACiE,aAAa,CAAC,0BAA0B,CAAC,CAAC/B,gBAAgB,CAAC,OAAO,EAAEgC,UAAU,CAAC;IACxFvE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,oBAAoB,CAAC;EAC7D;EAEA,SAAS6E,UAAUA,CAAA,EAAG;IACpBvE,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBI,QAAQ,CAACK,cAAc,CAAC,SAAS,CAAC,CAACQ,KAAK,CAACC,OAAO,GAAG,MAAM;IACzDd,QAAQ,CAACK,cAAc,CAAC,iBAAiB,CAAC,CAACQ,KAAK,CAACC,OAAO,GAAG,MAAM;EACnE;;EAEA;EACA,SAASkD,SAASA,CAAA,EAAG;IACnBhF,oBAAoB,CAAC,EAAE,CAAC;IACxBE,YAAY,CAAC,IAAI,CAAC;EACpB;;EAEA;EACA,eAAekD,oBAAoBA,CAAC+B,SAAS,EAAE5E,SAAS,EAAE;IACxD,IAAI;MACFI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEuE,SAAS,EAAE5E,SAAS,CAAC;MAC/D,MAAM6E,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DF,SAAU,cAAa5E,SAAU,EAAC,EAAE;QAC3H+E,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpChF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACkF,MAAM,CAAC;MAC1B,OAAOlF,MAAM,CAACkF,MAAM;IACtB,CAAC,CAAC,OAAO5D,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,KAAK;IACd;EACF;EAEA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMmD,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6D,EAAE;QACxFC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpC,OAAOjF,MAAM;IAEf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMsB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF3C,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;MACtB,MAAM6E,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,GAAG9E,SAAS,EAAE;QAC7F+E,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpC,OAAOjF,MAAM;IAEf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAM6D,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI;MACFlF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC;MACI,IAAIkF,UAAU,GAAG,IAAI;MACrB,IAAI,CAAC/F,iBAAiB,CAACgG,IAAI,CAAC,CAAC,EAAE;QAC7BtG,KAAK,CAACuC,KAAK,CAAC,+CAA+C,CAAC;QAC5DrB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxBkF,UAAU,GAAG,KAAK;MACpB;MACA,IAAI,CAAC7F,SAAS,EAAE;QACdR,KAAK,CAACuC,KAAK,CAAC,kDAAkD,CAAC;QAC/DrB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BkF,UAAU,GAAG,KAAK;MACpB;MACA;MACA,IAAI,CAACA,UAAU,EAAE;QACfxF,uBAAuB,CAAC,IAAI,CAAC;QAC7B;MACF,CAAC,MAED;QACEA,uBAAuB,CAAC,KAAK,CAAC;MAChC;MAEA,MAAM0F,QAAQ,GAAG;QACfC,UAAU,EAAE9F,OAAO;QACnB+F,UAAU,EAAEpG,IAAI,CAAC+C,EAAE;QACnB1B,KAAK,EAAEpB,iBAAiB;QACxBqB,UAAU,EAAEnB,SAAS;QACrBkG,YAAY,EAAErG,IAAI,CAACwC,IAAI;QACvBoD,MAAM,EAAE;MACV,CAAC;MAED,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;MAC/B,CAAC,CAAC;MAEN,IAAI,CAACZ,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpChF,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBjB,KAAK,CAAC8G,OAAO,CAAC,gBAAgB,CAAC;MAC/B,OAAO7F,MAAM;IAEf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CvC,KAAK,CAACuC,KAAK,CAAC,0CAA0C,CAAC;MACvD1B,uBAAuB,CAAC,IAAI,CAAC;IAC/B;EACF,CAAC;EAED,MAAMwD,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,GAAGvF,IAAI,CAAC+C,EAAE,GAAG,mBAAmB,EAAE;QAChHyC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpC,OAAOjF,MAAM;IAEf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMxB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAM4E,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,GAAGvF,IAAI,CAAC+C,EAAE,GAAG,oBAAoB,EAAE;QACjHyC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpChF,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,OAAOA,MAAM;IAEf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMwC,YAAY,GAAG,MAAOD,YAAY,IAAK;IAC3C,IAAIA,YAAY,EAAE;MAChB,IAAI;QACF,MAAMiC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEnC,YAAY,CAAC;QAErC,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,MAAM;UACdc,IAAI,EAAEI;QACR,CAAC,CAAC;QAEF,IAAIpB,QAAQ,CAACI,EAAE,EAAE;UACf7E,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1CnB,KAAK,CAAC8G,OAAO,CAAC,iBAAiB,CAAC;QAClC,CAAC,MAAM;UACL5F,OAAO,CAACqB,KAAK,CAAC,wBAAwB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdrB,OAAO,CAACqB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,MAAM;MACLrB,OAAO,CAAC+D,IAAI,CAAC,8BAA8B,CAAC;IAC9C;EACF,CAAC;EAED,MAAMD,aAAa,GAAG,MAAOkC,SAAS,IAAK;IACzC,IAAI;MACF,MAAMX,QAAQ,GAAG;QACfN,MAAM,EAAG;MACX,CAAC;MACD/E,OAAO,CAACC,GAAG,CAACoF,QAAQ,CAAC;MACrB,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,GAAGsB,SAAS,EAAE;QACzFrB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMhF,MAAM,GAAG,MAAM0E,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpChF,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,OAAOA,MAAM;IAEf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,IAAI,CAAClC,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAiH,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEF,oBACErH,OAAA;IAAKkD,EAAE,EAAC,UAAU;IAAA+D,QAAA,gBAChBjH,OAAA;MAAKsH,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC1BjH,OAAA;QAAIsH,SAAS,EAAC,YAAY;QAAAL,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CrH,OAAA;QAAIkD,EAAE,EAAC;MAAwB;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CAAC,eAELrH,OAAA;QAAKsH,SAAS,EAAC,SAAS;QAACpE,EAAE,EAAC,SAAS;QAAA+D,QAAA,eACnCjH,OAAA;UAAKsH,SAAS,EAAC,OAAO;UAAAL,QAAA,gBACpBjH,OAAA;YAAMsH,SAAS,EAAC,WAAW;YAACpE,EAAE,EAAC,WAAW;YAAA+D,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnDrH,OAAA;YAAIsH,SAAS,EAAC,YAAY;YAAAL,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9CrH,OAAA;YAAGsH,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAiC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACzDrH,OAAA;YACAyE,IAAI,EAAC,MAAM;YACX8C,WAAW,EAAC,MAAM;YAClBrE,EAAE,EAAC,oBAAoB;YACvBsE,QAAQ;YACRxD,KAAK,EAAE5D,iBAAkB;YACzBqH,QAAQ,EAAGC,CAAC,IAAKrH,oBAAoB,CAACqH,CAAC,CAACC,MAAM,CAAC3D,KAAK;UAAE;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eAEVrH,OAAA;YAAAiH,QAAA,gBACEjH,OAAA;cAAKsH,SAAS,EAAC,aAAa;cAAAL,QAAA,EAAC;YAA4B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/DrH,OAAA;cAAQkD,EAAE,EAAC,cAAc;cAACsE,QAAQ;cAACxD,KAAK,EAAE1D,SAAS,IAAI,EAAG;cAACmH,QAAQ,EAAGC,CAAC,IAAK;gBAACnH,YAAY,CAACmH,CAAC,CAACC,MAAM,CAAC3D,KAAK,CAAC;gBAAChD,OAAO,CAACC,GAAG,CAACyG,CAAC,CAACC,MAAM,CAAC3D,KAAK,CAAC;cAAA;YAAE;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/H,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAEJrH,OAAA;YAAQsH,SAAS,EAAC,WAAW;YAACpE,EAAE,EAAC,kBAAkB;YAAC0E,OAAO,EAAE1B,uBAAwB;YAAAe,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENrH,OAAA;QAAKsH,SAAS,EAAC,SAAS;QAACpE,EAAE,EAAC,iBAAiB;QAAA+D,QAAA,eAC3CjH,OAAA;UAAKsH,SAAS,EAAC,OAAO;UAAAL,QAAA,gBACpBjH,OAAA;YAAMsH,SAAS,EAAC,WAAW;YAACpE,EAAE,EAAC,yBAAyB;YAAA+D,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjErH,OAAA;YAAAiH,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCrH,OAAA;YAAAiH,QAAA,EAAG;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrH,OAAA;MAAKsH,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC1BjH,OAAA;QAAIsH,SAAS,EAAC,YAAY;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDrH,OAAA;QAAIkD,EAAE,EAAC;MAAsB;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENrH,OAAA,CAACH,cAAc;MAAAqH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACnH,EAAA,CAteMD,WAAW;EAAA,QACDL,OAAO;AAAA;AAAAiI,EAAA,GADjB5H,WAAW;AAwelB,eAAeA,WAAW;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}